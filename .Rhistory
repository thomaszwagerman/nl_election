dplyr::ungroup() %>%
select(party,percentage) %>%
as.data.frame()
nijmegen <- nijmegen[order(nijmegen$percentage,decreasing = T),]
nijmegen$party <- factor(nijmegen$party, levels = rev(nijmegen$party))
colours_gemeente <- colourscheme[colourscheme$party %in% nijmegen$party,]
cols <- colourscheme$colour
names(cols) <- levels(colourscheme$party)
ggplot(nijmegen) +
geom_bar(aes(x = "", y = percentage, fill = party),
stat = "identity", colour = "black", width =1) +
#geom_text(aes(x = "", y = pct, label = percent(pct)), position = position_stack(vjust = 0.5))+
coord_polar("y", start = 0) +
labs(x = NULL, y = NULL, fill = NULL,
title = "Verkiezingsuitslag Nijmegen") +
guides(fill = guide_legend(reverse = T))+
theme_classic()+
scale_fill_manual(values = c(cols))+
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "black"))
names(cols) <- levels(colourscheme$party)
nijmegen <- nijmegen[order(nijmegen$percentage,decreasing = T),]
nijmegen$party <- factor(nijmegen$party, levels = rev(nijmegen$party))
colours_gemeente <- colourscheme[colourscheme$party %in% nijmegen$party,]
cols <- colourscheme$colour
ggplot(nijmegen) +
geom_bar(aes(x = "", y = percentage, fill = party),
stat = "identity", colour = "black", width =1) +
#geom_text(aes(x = "", y = pct, label = percent(pct)), position = position_stack(vjust = 0.5))+
coord_polar("y", start = 0) +
labs(x = NULL, y = NULL, fill = NULL,
title = "Verkiezingsuitslag Nijmegen") +
guides(fill = guide_legend(reverse = T))+
theme_classic()+
scale_fill_manual(values = c(cols))+
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "black"))
colours_gemeente
colourscheme
colourscheme <- read.csv(paste0(election_dir, "partycolours.csv"))
colourscheme
colourscheme <- read.csv(paste0(election_dir, "partycolours.csv"))
colourscheme
colours_gemeente
write.csv(colours_gemeente, file = "C:/Users/thowag/Desktop/nl_election/partycolours.csv", row.names = F)
write.csv(colours_gemeente, file = "C:/Users/thowag/Desktop/nl_election/partycolours.csv", row.names = F)
library(dplyr)
library(tidyr)
library(sf)
library(ggplot2)
library(ggiraph)
library(widgetframe)
library(plotly)
election_dir <- "C:/Users/thowag/Desktop/nl_election/"
df_results <- read.csv(paste0(election_dir, "Uitslag_alle_gemeenten_EP20190523.csv"), sep=";")
shp_gemeentes <- st_read(paste0(election_dir,"Gemeentegrenzen_2019-shp/Gemeentegrenzen__voorlopig____kustlijn.shp"))
colourscheme <- read.csv(paste0(election_dir, "partycolours.csv"))
#sort in long format
df_long <- df_results %>%
pivot_longer(cols = Partij.van.de.Arbeid..P.v.d.A..:De.Groenen, names_to = "party", values_to = "votes") %>%
select(regio =RegioNaam, code = RegioCode,party, votes) %>%
group_by(code) %>%
mutate(total = sum(votes))
unique(df_long$party)
length(unique(df_long$party))
library(dplyr)
library(tidyr)
library(sf)
library(ggplot2)
library(ggiraph)
library(widgetframe)
library(plotly)
election_dir <- "C:/Users/thowag/Desktop/nl_election/"
df_results <- read.csv(paste0(election_dir, "Uitslag_alle_gemeenten_EP20190523.csv"), sep=";")
shp_gemeentes <- st_read(paste0(election_dir,"Gemeentegrenzen_2019-shp/Gemeentegrenzen__voorlopig____kustlijn.shp"))
colourscheme <- read.csv(paste0(election_dir, "partycolours.csv"))
#sort in long format
df_long <- df_results %>%
pivot_longer(cols = Partij.van.de.Arbeid..P.v.d.A..:De.Groenen, names_to = "party", values_to = "votes") %>%
select(regio =RegioNaam, code = RegioCode,party, votes) %>%
group_by(code) %>%
mutate(total = sum(votes))
df_long$percentage <- (df_long$votes/df_long$total)*100
df_long$percentage <- round(df_long$percentage,1)
#
# df_long$party <- gsub("Partij.van.de.Arbeid..P.v.d.A..","PvdA",df_long$party)
# df_long$party <- gsub("ChristenUnie.SGP","CU en SGP",df_long$party)
# df_long$party <- gsub("Democraten.66..D66.","D66",df_long$party)
# df_long$party <- gsub("X50PLUS","Partij 50PLUS",df_long$party)
# df_long$party <- gsub("Forum.voor.Democratie","FvD",df_long$party)
df_long$party <- as.factor(df_long$party)
df_long$party <- as.character(df_long$party)
df_long$percentage <- as.numeric(df_long$percentage)
nijmegen <- df_long %>%
filter(regio == "Nijmegen") %>%
dplyr::ungroup() %>%
select(party,percentage) %>%
as.data.frame()
nijmegen <- nijmegen[order(nijmegen$percentage,decreasing = T),]
nijmegen$party <- factor(nijmegen$party, levels = rev(nijmegen$party))
colours_gemeente <- colourscheme[colourscheme$party %in% nijmegen$party,]
cols <- colourscheme$colour
ggplot(nijmegen) +
geom_bar(aes(x = "", y = percentage, fill = party),
stat = "identity", colour = "black", width =1) +
#geom_text(aes(x = "", y = pct, label = percent(pct)), position = position_stack(vjust = 0.5))+
coord_polar("y", start = 0) +
labs(x = NULL, y = NULL, fill = NULL,
title = "Verkiezingsuitslag Nijmegen") +
guides(fill = guide_legend(reverse = T))+
theme_classic()+
scale_fill_manual(values = c(cols))+
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "black"))
cols
colourscheme <- read.csv(paste0(election_dir, "partycolours.csv"))
colourscheme
library(dplyr)
library(tidyr)
library(sf)
library(ggplot2)
library(ggiraph)
library(widgetframe)
library(plotly)
election_dir <- "C:/Users/thowag/Desktop/nl_election/"
df_results <- read.csv(paste0(election_dir, "Uitslag_alle_gemeenten_EP20190523.csv"), sep=";")
shp_gemeentes <- st_read(paste0(election_dir,"Gemeentegrenzen_2019-shp/Gemeentegrenzen__voorlopig____kustlijn.shp"))
colourscheme <- read.csv(paste0(election_dir, "partycolours.csv"))
#sort in long format
df_long <- df_results %>%
pivot_longer(cols = Partij.van.de.Arbeid..P.v.d.A..:De.Groenen, names_to = "party", values_to = "votes") %>%
select(regio =RegioNaam, code = RegioCode,party, votes) %>%
group_by(code) %>%
mutate(total = sum(votes))
df_long$percentage <- (df_long$votes/df_long$total)*100
df_long$percentage <- round(df_long$percentage,1)
#
# df_long$party <- gsub("Partij.van.de.Arbeid..P.v.d.A..","PvdA",df_long$party)
# df_long$party <- gsub("ChristenUnie.SGP","CU en SGP",df_long$party)
# df_long$party <- gsub("Democraten.66..D66.","D66",df_long$party)
# df_long$party <- gsub("X50PLUS","Partij 50PLUS",df_long$party)
# df_long$party <- gsub("Forum.voor.Democratie","FvD",df_long$party)
df_long$party <- as.factor(df_long$party)
df_long$party <- as.character(df_long$party)
df_long$percentage <- as.numeric(df_long$percentage)
nijmegen <- df_long %>%
filter(regio == "Nijmegen") %>%
dplyr::ungroup() %>%
select(party,percentage) %>%
as.data.frame()
nijmegen <- nijmegen[order(nijmegen$percentage,decreasing = T),]
nijmegen$party <- factor(nijmegen$party, levels = rev(nijmegen$party))
colours_gemeente <- colourscheme[colourscheme$party %in% nijmegen$party,]
cols <- colourscheme$colour
ggplot(nijmegen) +
geom_bar(aes(x = "", y = percentage, fill = party),
stat = "identity", colour = "black", width =1) +
#geom_text(aes(x = "", y = pct, label = percent(pct)), position = position_stack(vjust = 0.5))+
coord_polar("y", start = 0) +
labs(x = NULL, y = NULL, fill = NULL,
title = "Verkiezingsuitslag Nijmegen") +
guides(fill = guide_legend(reverse = T))+
theme_classic()+
scale_fill_manual(values = c(cols))+
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "black"))
shiny::runApp('C:/Users/thowag/Desktop/nl_election')
runApp('C:/Users/thowag/Desktop/nl_election')
library(ggparliament)
runApp('C:/Users/thowag/Desktop/nl_election')
runApp('C:/Users/thowag/Desktop/nl_election')
runApp('C:/Users/thowag/Desktop/nl_election')
install.packages("ggpol")
library(ggpol)
df_pr
ggplot(df_pr) +
ggpol::geom_parliament_seats(aes(seats = seats, fill = party)) +
#highlight the party in control of the House with a black line
scale_fill_manual(values = nl_house$colour,
limits = nl_house$party)+
coord_fixed()+
theme_void()
ggplot(df_pr) +
ggpol::geom_parliament(aes(seats = seats, fill = party)) +
#highlight the party in control of the House with a black line
scale_fill_manual(values = nl_house$colour,
limits = nl_house$party)+
coord_fixed()+
theme_void()
ggplot(df_pr) +
ggpol::geom_parliament(aes(seats = seats, fill = party)) +
#highlight the party in control of the House with a black line
scale_fill_manual(values = df_pr$colour,
labels = df_pr$party)+
coord_fixed()+
theme_void()
ggplot(df_pr) +
ggpol::geom_parliament(aes(seats = seats, fill = party),color=black) +
#highlight the party in control of the House with a black line
scale_fill_manual(values = df_pr$colour,
labels = df_pr$party)+
coord_fixed()+
theme_void()
ggplot(df_pr) +
ggpol::geom_parliament(aes(seats = seats, fill = party),color="black") +
#highlight the party in control of the House with a black line
scale_fill_manual(values = df_pr$colour,
labels = df_pr$party)+
coord_fixed()+
theme_void()
ggplot(df_pr) +
ggpol::geom_parliament(aes(seats = seats, fill = party),color="black") +
#highlight the party in control of the House with a black line
scale_fill_manual(values = df_pr$colour,
labels = df_pr$party)+
coord_fixed()+
theme_void()
fptp_results
representatives_fptp <- ggplot(fptp_results) +
ggpol::geom_parliament(aes(seats = seats, fill = party),color="black") +
#highlight the party in control of the House with a black line
scale_fill_manual(values = fptp_results$colour,
labels = fptp_results$party)+
coord_fixed()+
theme_void()
representatives_fptp
runApp('C:/Users/thowag/Desktop/nl_election')
runApp('C:/Users/thowag/Desktop/nl_election')
runApp('C:/Users/thowag/Desktop/nl_election')
df_results <- read.csv(paste0(election_dir, "UK/HoC-GE2019-results-by-constituency-csv.csv"))
library(dplyr)
library(tidyr)
library(sf)
library(ggplot2)
library(ggiraph)
library(ggpol)
election_dir <- "C:/Users/thowag/Desktop/nl_election/"
df_results <- read.csv(paste0(election_dir, "UK/HoC-GE2019-results-by-constituency-csv.csv"))
df_results
df_ukpr <- df_results %>%
pivot_longer(cols = con:other, names_to = "party", values_to = "votes") %>%
select(party, votes) %>%
group_by(party) %>%
summarise(votes=sum(votes))
df_ukpr
dHondt <- function(votes, parties, n_seats = 150) {
divisor.mat           <- sum(votes) / sapply(votes, "/", seq(1, n_seats, 1))
colnames(divisor.mat) <- parties
m.mat     <- tidyr::gather(as.data.frame(divisor.mat), key="name", value="value",
everything())
m.mat     <- m.mat[rank(m.mat$value, ties.method = "random") <= n_seats, ]
rle.seats <- rle(as.character(m.mat$name))
if (sum(rle.seats$length) != n_seats)
stop(paste("Number of seats distributed not equal to", n_seats))
# fill up the vector with parties that got no seats
if (any(!(parties %in% rle.seats$values))) {
# add parties
missing_parties <- parties[!(parties %in% rle.seats$values)]
for (party in missing_parties) {
rle.seats$lengths <- c(rle.seats$lengths, 0)
rle.seats$values  <- c(rle.seats$values, party)
}
# sort results
rle.seats$lengths <- rle.seats$lengths[match(parties, rle.seats$values)]
rle.seats$values  <- rle.seats$values[match(parties, rle.seats$values)]
}
rle.seats$length
}
df_ukpr$seats<- dHondt(df_ukpr$votes,df_ukpr$party,650)
df_ukpr
df_ukpr <- df_ukpr %>%
filter(seats>0) %>%
as.data.frame()
df_ukpr <- df_ukpr[order(df_ukpr$seats,decreasing =T),]
df_ukpr <- df_ukpr[order(df_ukpr$seats,decreasing =T),]
df_ukpr
df_results <- read.csv(paste0(election_dir, "Uitslag_alle_gemeenten_TK20170315.csv"), sep=";")
df_results
df_results <- read.csv(paste0(election_dir, "UK/HoC-GE2019-results-by-constituency-csv.csv"))
df_results
df_ukpr <- df_results %>%
pivot_longer(cols = con:alliance, names_to = "party", values_to = "votes") %>%
select(party, votes) %>%
group_by(party) %>%
summarise(votes=sum(votes))
dHondt <- function(votes, parties, n_seats = 150) {
divisor.mat           <- sum(votes) / sapply(votes, "/", seq(1, n_seats, 1))
colnames(divisor.mat) <- parties
m.mat     <- tidyr::gather(as.data.frame(divisor.mat), key="name", value="value",
everything())
m.mat     <- m.mat[rank(m.mat$value, ties.method = "random") <= n_seats, ]
rle.seats <- rle(as.character(m.mat$name))
if (sum(rle.seats$length) != n_seats)
stop(paste("Number of seats distributed not equal to", n_seats))
# fill up the vector with parties that got no seats
if (any(!(parties %in% rle.seats$values))) {
# add parties
missing_parties <- parties[!(parties %in% rle.seats$values)]
for (party in missing_parties) {
rle.seats$lengths <- c(rle.seats$lengths, 0)
rle.seats$values  <- c(rle.seats$values, party)
}
# sort results
rle.seats$lengths <- rle.seats$lengths[match(parties, rle.seats$values)]
rle.seats$values  <- rle.seats$values[match(parties, rle.seats$values)]
}
rle.seats$length
}
df_ukpr$seats<- dHondt(df_ukpr$votes,df_ukpr$party,650)
df_ukpr <- df_ukpr %>%
filter(seats>0) %>%
as.data.frame()
df_ukpr <- df_ukpr[order(df_ukpr$seats,decreasing =T),]
df_ukpr
colourscheme <- read.csv(paste0(election_dir, "UK/colourscheme.csv"))
library(dplyr)
library(tidyr)
library(sf)
library(ggplot2)
library(ggiraph)
library(ggpol)
election_dir <- "C:/Users/thowag/Desktop/nl_election/"
df_results <- read.csv(paste0(election_dir, "UK/HoC-GE2019-results-by-constituency-csv.csv"))
uk_colourscheme <- read.csv(paste0(election_dir, "UK/uk_colourscheme.csv"))
df_ukpr <- df_results %>%
pivot_longer(cols = con:alliance, names_to = "party", values_to = "votes") %>%
select(party, votes) %>%
group_by(party) %>%
summarise(votes=sum(votes))
dHondt <- function(votes, parties, n_seats = 150) {
divisor.mat           <- sum(votes) / sapply(votes, "/", seq(1, n_seats, 1))
colnames(divisor.mat) <- parties
m.mat     <- tidyr::gather(as.data.frame(divisor.mat), key="name", value="value",
everything())
m.mat     <- m.mat[rank(m.mat$value, ties.method = "random") <= n_seats, ]
rle.seats <- rle(as.character(m.mat$name))
if (sum(rle.seats$length) != n_seats)
stop(paste("Number of seats distributed not equal to", n_seats))
# fill up the vector with parties that got no seats
if (any(!(parties %in% rle.seats$values))) {
# add parties
missing_parties <- parties[!(parties %in% rle.seats$values)]
for (party in missing_parties) {
rle.seats$lengths <- c(rle.seats$lengths, 0)
rle.seats$values  <- c(rle.seats$values, party)
}
# sort results
rle.seats$lengths <- rle.seats$lengths[match(parties, rle.seats$values)]
rle.seats$values  <- rle.seats$values[match(parties, rle.seats$values)]
}
rle.seats$length
}
df_ukpr$seats<- dHondt(df_ukpr$votes,df_ukpr$party,650)
df_ukpr <- df_ukpr %>%
filter(seats>0) %>%
as.data.frame()
df_ukpr <- df_ukpr[order(df_ukpr$seats,decreasing =T),]
df_ukpr <- left_join(df_ukpr,uk_colourscheme)
df_ukpr
uk_colourscheme <- read.csv(paste0(election_dir, "UK/uk_colourscheme.csv"))
uk_colourscheme <- read.csv(paste0(election_dir, "UK/uk_colourscheme.csv"))
df_ukpr <- left_join(df_ukpr,uk_colourscheme)
df_ukpr <- df_ukpr[order(df_ukpr$seats,decreasing =T),]
df_ukpr
hoc_pr <- ggplot(df_ukpr) +
ggpol::geom_parliament(aes(seats = seats, fill = party),color="black") +
#highlight the party in control of the House with a black line
scale_fill_manual(values = df_ukpr$colour,
labels = df_ukpr$party)+
coord_fixed()+
theme_void()
hoc_pr
df_results
#actual results---
df_ukfptp <- df_results %>%
select(constituency_name,ons_id,first_party)
df_ukfptp
test <- table(df_ukfptp$party) %>% as.data.frame()
test
test <- table(df_ukfptp$first_party) %>% as.data.frame()
test
colnames(df_ukfptp) <- c("party","seats")
#actual results---
df_ukfptp <- df_results %>%
select(constituency_name,ons_id,first_party)
df_ukfptp <- table(df_ukfptp$first_party) %>% as.data.frame()
colnames(df_ukfptp) <- c("party","seats")
fptp_results <- left_join(fptp_results,uk_colourscheme)
df_ukfptp <- left_join(df_ukfptp,uk_colourscheme)
df_ukfptp
df_ukfptp$party <- tolower(df_ukfptp$party)
df_ukfptp
df_ukfptp <- left_join(df_ukfptp,uk_colourscheme)
df_ukfptp
uk_colourscheme
#actual results---
df_ukfptp <- df_results %>%
select(constituency_name,ons_id,first_party)
df_ukfptp <- table(df_ukfptp$first_party) %>% as.data.frame()
colnames(df_ukfptp) <- c("party","seats")
df_ukfptp$party <- tolower(df_ukfptp$party)
df_ukfptp <- left_join(df_ukfptp,uk_colourscheme)
df_ukfptp
library(dplyr)
library(tidyr)
library(sf)
library(ggplot2)
library(ggiraph)
library(ggpol)
election_dir <- "C:/Users/thowag/Desktop/nl_election/"
df_results <- read.csv(paste0(election_dir, "UK/HoC-GE2019-results-by-constituency-csv.csv"))
uk_colourscheme <- read.csv(paste0(election_dir, "UK/uk_colourscheme.csv"))
#results if D'hondt method was used
df_ukpr <- df_results %>%
pivot_longer(cols = con:alliance, names_to = "party", values_to = "votes") %>%
select(party, votes) %>%
group_by(party) %>%
summarise(votes=sum(votes))
dHondt <- function(votes, parties, n_seats = 150) {
divisor.mat           <- sum(votes) / sapply(votes, "/", seq(1, n_seats, 1))
colnames(divisor.mat) <- parties
m.mat     <- tidyr::gather(as.data.frame(divisor.mat), key="name", value="value",
everything())
m.mat     <- m.mat[rank(m.mat$value, ties.method = "random") <= n_seats, ]
rle.seats <- rle(as.character(m.mat$name))
if (sum(rle.seats$length) != n_seats)
stop(paste("Number of seats distributed not equal to", n_seats))
# fill up the vector with parties that got no seats
if (any(!(parties %in% rle.seats$values))) {
# add parties
missing_parties <- parties[!(parties %in% rle.seats$values)]
for (party in missing_parties) {
rle.seats$lengths <- c(rle.seats$lengths, 0)
rle.seats$values  <- c(rle.seats$values, party)
}
# sort results
rle.seats$lengths <- rle.seats$lengths[match(parties, rle.seats$values)]
rle.seats$values  <- rle.seats$values[match(parties, rle.seats$values)]
}
rle.seats$length
}
df_ukpr$seats<- dHondt(df_ukpr$votes,df_ukpr$party,650)
df_ukpr <- df_ukpr %>%
filter(seats>0) %>%
as.data.frame()
df_ukpr <- df_ukpr[order(df_ukpr$seats,decreasing =T),]
df_ukpr <- left_join(df_ukpr,uk_colourscheme)
hoc_pr <- ggplot(df_ukpr) +
ggpol::geom_parliament(aes(seats = seats, fill = party),color="black") +
#highlight the party in control of the House with a black line
scale_fill_manual(values = df_ukpr$colour,
labels = df_ukpr$party)+
coord_fixed()+
theme_void()
#actual results---
df_ukfptp <- df_results %>%
select(constituency_name,ons_id,first_party)
df_ukfptp <- table(df_ukfptp$first_party) %>% as.data.frame()
colnames(df_ukfptp) <- c("party","seats")
df_ukfptp$party <- tolower(df_ukfptp$party)
df_ukfptp <- left_join(df_ukfptp,uk_colourscheme)
df_ukfptp <- left_join(df_ukfptp,uk_colourscheme)
#actual results---
df_ukfptp <- df_results %>%
select(constituency_name,ons_id,first_party)
df_ukfptp <- table(df_ukfptp$first_party) %>% as.data.frame()
colnames(df_ukfptp) <- c("party","seats")
df_ukfptp$party <- tolower(df_ukfptp$party)
df_ukfptp <- left_join(df_ukfptp,uk_colourscheme)
df_ukfptp
hoc_fptp <- ggplot(df_ukfptp) +
ggpol::geom_parliament(aes(seats = seats, fill = party),color="black") +
#highlight the party in control of the House with a black line
scale_fill_manual(values = df_ukfptp$colour,
labels = df_ukfptp$party)+
coord_fixed()+
theme_void()
hoc_fptp
#actual results---
df_ukfptp <- df_results %>%
select(constituency_name,ons_id,first_party)
df_ukfptp <- table(df_ukfptp$first_party) %>% as.data.frame()
colnames(df_ukfptp) <- c("party","seats")
df_pr <- df_pr[order(df_pr$seats,decreasing =T),]
df_ukfptp$party <- tolower(df_ukfptp$party)
df_ukfptp <- left_join(df_ukfptp,uk_colourscheme)
df_ukfptp <- df_ukfptp[order(df_ukfptp$seats,decreasing =T),]
df_ukfptp$party <- tolower(df_ukfptp$party)
df_ukfptp <- left_join(df_ukfptp,uk_colourscheme)
hoc_fptp <- ggplot(df_ukfptp) +
ggpol::geom_parliament(aes(seats = seats, fill = party),color="black") +
#highlight the party in control of the House with a black line
scale_fill_manual(values = df_ukfptp$colour,
labels = df_ukfptp$party)+
coord_fixed()+
theme_void()
hoc_fptp
hoc_pr
runApp('C:/Users/thowag/Desktop/nl_election')
runApp()
runApp('C:/Users/thowag/Desktop/nl_election')
runApp('C:/Users/thowag/Desktop/nl_election')
runApp('C:/Users/thowag/Desktop/nl_election')
runApp('C:/Users/thowag/Desktop/nl_election')
